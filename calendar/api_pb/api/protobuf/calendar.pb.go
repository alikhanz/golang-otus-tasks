// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/protobuf/calendar.proto

package calendar

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Event struct {
	EventId              string               `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Title                string               `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description          string               `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,4,opt,name=time,proto3" json:"time,omitempty"`
	Repeatable           bool                 `protobuf:"varint,5,opt,name=repeatable,proto3" json:"repeatable,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_189cd05c4818b994, []int{0}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetEventId() string {
	if m != nil {
		return m.EventId
	}
	return ""
}

func (m *Event) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Event) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Event) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *Event) GetRepeatable() bool {
	if m != nil {
		return m.Repeatable
	}
	return false
}

type EventsList struct {
	Events               []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventsList) Reset()         { *m = EventsList{} }
func (m *EventsList) String() string { return proto.CompactTextString(m) }
func (*EventsList) ProtoMessage()    {}
func (*EventsList) Descriptor() ([]byte, []int) {
	return fileDescriptor_189cd05c4818b994, []int{1}
}

func (m *EventsList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventsList.Unmarshal(m, b)
}
func (m *EventsList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventsList.Marshal(b, m, deterministic)
}
func (m *EventsList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventsList.Merge(m, src)
}
func (m *EventsList) XXX_Size() int {
	return xxx_messageInfo_EventsList.Size(m)
}
func (m *EventsList) XXX_DiscardUnknown() {
	xxx_messageInfo_EventsList.DiscardUnknown(m)
}

var xxx_messageInfo_EventsList proto.InternalMessageInfo

func (m *EventsList) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

type CreateEventRequest struct {
	Title                string               `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description          string               `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,4,opt,name=time,proto3" json:"time,omitempty"`
	Repeatable           bool                 `protobuf:"varint,5,opt,name=repeatable,proto3" json:"repeatable,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CreateEventRequest) Reset()         { *m = CreateEventRequest{} }
func (m *CreateEventRequest) String() string { return proto.CompactTextString(m) }
func (*CreateEventRequest) ProtoMessage()    {}
func (*CreateEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_189cd05c4818b994, []int{2}
}

func (m *CreateEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateEventRequest.Unmarshal(m, b)
}
func (m *CreateEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateEventRequest.Marshal(b, m, deterministic)
}
func (m *CreateEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateEventRequest.Merge(m, src)
}
func (m *CreateEventRequest) XXX_Size() int {
	return xxx_messageInfo_CreateEventRequest.Size(m)
}
func (m *CreateEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateEventRequest proto.InternalMessageInfo

func (m *CreateEventRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CreateEventRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateEventRequest) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *CreateEventRequest) GetRepeatable() bool {
	if m != nil {
		return m.Repeatable
	}
	return false
}

type RemoveEventRequest struct {
	EventId              string   `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveEventRequest) Reset()         { *m = RemoveEventRequest{} }
func (m *RemoveEventRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveEventRequest) ProtoMessage()    {}
func (*RemoveEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_189cd05c4818b994, []int{3}
}

func (m *RemoveEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveEventRequest.Unmarshal(m, b)
}
func (m *RemoveEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveEventRequest.Marshal(b, m, deterministic)
}
func (m *RemoveEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveEventRequest.Merge(m, src)
}
func (m *RemoveEventRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveEventRequest.Size(m)
}
func (m *RemoveEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveEventRequest proto.InternalMessageInfo

func (m *RemoveEventRequest) GetEventId() string {
	if m != nil {
		return m.EventId
	}
	return ""
}

type RemoveEventResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveEventResponse) Reset()         { *m = RemoveEventResponse{} }
func (m *RemoveEventResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveEventResponse) ProtoMessage()    {}
func (*RemoveEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_189cd05c4818b994, []int{4}
}

func (m *RemoveEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveEventResponse.Unmarshal(m, b)
}
func (m *RemoveEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveEventResponse.Marshal(b, m, deterministic)
}
func (m *RemoveEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveEventResponse.Merge(m, src)
}
func (m *RemoveEventResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveEventResponse.Size(m)
}
func (m *RemoveEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveEventResponse proto.InternalMessageInfo

type GetEventsListRequest struct {
	FromDate             *timestamp.Timestamp `protobuf:"bytes,1,opt,name=fromDate,proto3" json:"fromDate,omitempty"`
	ToDate               *timestamp.Timestamp `protobuf:"bytes,2,opt,name=toDate,proto3" json:"toDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetEventsListRequest) Reset()         { *m = GetEventsListRequest{} }
func (m *GetEventsListRequest) String() string { return proto.CompactTextString(m) }
func (*GetEventsListRequest) ProtoMessage()    {}
func (*GetEventsListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_189cd05c4818b994, []int{5}
}

func (m *GetEventsListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventsListRequest.Unmarshal(m, b)
}
func (m *GetEventsListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventsListRequest.Marshal(b, m, deterministic)
}
func (m *GetEventsListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventsListRequest.Merge(m, src)
}
func (m *GetEventsListRequest) XXX_Size() int {
	return xxx_messageInfo_GetEventsListRequest.Size(m)
}
func (m *GetEventsListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventsListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventsListRequest proto.InternalMessageInfo

func (m *GetEventsListRequest) GetFromDate() *timestamp.Timestamp {
	if m != nil {
		return m.FromDate
	}
	return nil
}

func (m *GetEventsListRequest) GetToDate() *timestamp.Timestamp {
	if m != nil {
		return m.ToDate
	}
	return nil
}

func init() {
	proto.RegisterType((*Event)(nil), "calendar.Event")
	proto.RegisterType((*EventsList)(nil), "calendar.EventsList")
	proto.RegisterType((*CreateEventRequest)(nil), "calendar.CreateEventRequest")
	proto.RegisterType((*RemoveEventRequest)(nil), "calendar.RemoveEventRequest")
	proto.RegisterType((*RemoveEventResponse)(nil), "calendar.RemoveEventResponse")
	proto.RegisterType((*GetEventsListRequest)(nil), "calendar.GetEventsListRequest")
}

func init() {
	proto.RegisterFile("api/protobuf/calendar.proto", fileDescriptor_189cd05c4818b994)
}

var fileDescriptor_189cd05c4818b994 = []byte{
	// 443 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x54, 0x4b, 0x6e, 0xd4, 0x40,
	0x10, 0x55, 0x4f, 0x32, 0x8e, 0x53, 0x16, 0x44, 0x54, 0x06, 0xc9, 0x31, 0x21, 0x58, 0xbd, 0xc1,
	0x62, 0x61, 0x4b, 0x46, 0x70, 0x00, 0x02, 0x42, 0xa0, 0xac, 0x2c, 0x60, 0xc1, 0x06, 0xf5, 0xc4,
	0x95, 0xc8, 0x92, 0xed, 0x36, 0xee, 0x4e, 0x36, 0x88, 0x4d, 0xae, 0xc0, 0x96, 0x13, 0x70, 0x1d,
	0x8e, 0x00, 0x07, 0x41, 0x6e, 0x7f, 0x67, 0x26, 0x03, 0x5b, 0x76, 0xee, 0xaa, 0x57, 0xaf, 0x5e,
	0xbd, 0x27, 0x19, 0x1e, 0x88, 0x2a, 0x8b, 0xaa, 0x5a, 0x6a, 0xb9, 0xbc, 0xba, 0x88, 0xce, 0x45,
	0x4e, 0x65, 0x2a, 0xea, 0xd0, 0x54, 0xd0, 0xee, 0xdf, 0xde, 0xa3, 0x4b, 0x29, 0x2f, 0x73, 0x1a,
	0x91, 0x3a, 0x2b, 0x48, 0x69, 0x51, 0x54, 0x2d, 0xd4, 0x3b, 0xee, 0x00, 0x0d, 0x9d, 0x28, 0x4b,
	0xa9, 0x85, 0xce, 0x64, 0xa9, 0xda, 0x2e, 0xff, 0xc1, 0x60, 0xfe, 0xea, 0x9a, 0x4a, 0x8d, 0x47,
	0x60, 0x53, 0xf3, 0xf1, 0x29, 0x4b, 0x5d, 0xe6, 0xb3, 0x60, 0x3f, 0xd9, 0x33, 0xef, 0x37, 0x29,
	0x2e, 0x60, 0xae, 0x33, 0x9d, 0x93, 0x3b, 0x33, 0xf5, 0xf6, 0x81, 0x3e, 0x38, 0x29, 0xa9, 0xf3,
	0x3a, 0xab, 0x1a, 0x42, 0x77, 0xc7, 0xf4, 0xa6, 0x25, 0x0c, 0x61, 0xb7, 0x51, 0xe3, 0xee, 0xfa,
	0x2c, 0x70, 0x62, 0x2f, 0x6c, 0x95, 0x84, 0xbd, 0xd4, 0xf0, 0x5d, 0x2f, 0x35, 0x31, 0x38, 0x3c,
	0x01, 0xa8, 0xa9, 0x22, 0xa1, 0xc5, 0x32, 0x27, 0x77, 0xee, 0xb3, 0xc0, 0x4e, 0x26, 0x15, 0xfe,
	0x0c, 0xc0, 0x68, 0x55, 0x67, 0x99, 0xd2, 0xf8, 0x18, 0x2c, 0x23, 0x50, 0xb9, 0xcc, 0xdf, 0x09,
	0x9c, 0xf8, 0x20, 0x1c, 0x4c, 0x32, 0xa8, 0xa4, 0x6b, 0xf3, 0xef, 0x0c, 0xf0, 0xb4, 0x26, 0xa1,
	0xa9, 0xad, 0xd3, 0xe7, 0x2b, 0x52, 0xfa, 0xbf, 0xb9, 0x2a, 0x02, 0x4c, 0xa8, 0x90, 0xd7, 0xab,
	0xea, 0xb6, 0xc7, 0xc1, 0xef, 0xc3, 0xe1, 0xca, 0x80, 0xaa, 0x64, 0xa9, 0x88, 0xdf, 0x30, 0x58,
	0xbc, 0x26, 0x3d, 0x3a, 0xd4, 0x53, 0x3d, 0x07, 0xfb, 0xa2, 0x96, 0xc5, 0x4b, 0xa1, 0xc9, 0x50,
	0xfd, 0x5d, 0xf4, 0x80, 0xc5, 0x18, 0x2c, 0x2d, 0xcd, 0xd4, 0xec, 0x9f, 0x53, 0x1d, 0x32, 0xfe,
	0x35, 0x03, 0xfb, 0xb4, 0x8b, 0x01, 0xcf, 0xc0, 0x99, 0xf8, 0x8e, 0xc7, 0x63, 0x40, 0x9b, 0x71,
	0x78, 0xeb, 0xf1, 0xf1, 0xbb, 0x37, 0x3f, 0x7f, 0x7f, 0x9b, 0xd9, 0xdc, 0x8a, 0xcc, 0xe1, 0xf8,
	0x16, 0x9c, 0xf7, 0x55, 0x3a, 0xb0, 0xad, 0xe3, 0x37, 0x09, 0x8e, 0x0c, 0xc1, 0xa1, 0x77, 0xaf,
	0x25, 0x88, 0xbe, 0xf4, 0x86, 0x7e, 0x45, 0x02, 0x67, 0x62, 0xe1, 0x54, 0xd9, 0x66, 0x14, 0xde,
	0xc3, 0x2d, 0xdd, 0xce, 0xf7, 0x6e, 0xcd, 0x93, 0x5b, 0xd6, 0x7c, 0x80, 0x3b, 0x2b, 0x89, 0xe0,
	0xc9, 0x48, 0x75, 0x5b, 0x54, 0xde, 0x62, 0xed, 0x06, 0xd3, 0xe4, 0x07, 0x66, 0xc3, 0x3e, 0xee,
	0xb5, 0x1b, 0xd4, 0x0b, 0xf8, 0x38, 0xfc, 0x00, 0x96, 0x96, 0x49, 0xe3, 0xe9, 0x9f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x2b, 0x45, 0x22, 0x86, 0x30, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CalendarClient is the client API for Calendar service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalendarClient interface {
	CreateEvent(ctx context.Context, in *CreateEventRequest, opts ...grpc.CallOption) (*Event, error)
	UpdateEvent(ctx context.Context, in *Event, opts ...grpc.CallOption) (*Event, error)
	RemoveEvent(ctx context.Context, in *RemoveEventRequest, opts ...grpc.CallOption) (*RemoveEventResponse, error)
	GetEventsList(ctx context.Context, in *GetEventsListRequest, opts ...grpc.CallOption) (*EventsList, error)
}

type calendarClient struct {
	cc grpc.ClientConnInterface
}

func NewCalendarClient(cc grpc.ClientConnInterface) CalendarClient {
	return &calendarClient{cc}
}

func (c *calendarClient) CreateEvent(ctx context.Context, in *CreateEventRequest, opts ...grpc.CallOption) (*Event, error) {
	out := new(Event)
	err := c.cc.Invoke(ctx, "/calendar.Calendar/CreateEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarClient) UpdateEvent(ctx context.Context, in *Event, opts ...grpc.CallOption) (*Event, error) {
	out := new(Event)
	err := c.cc.Invoke(ctx, "/calendar.Calendar/UpdateEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarClient) RemoveEvent(ctx context.Context, in *RemoveEventRequest, opts ...grpc.CallOption) (*RemoveEventResponse, error) {
	out := new(RemoveEventResponse)
	err := c.cc.Invoke(ctx, "/calendar.Calendar/RemoveEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarClient) GetEventsList(ctx context.Context, in *GetEventsListRequest, opts ...grpc.CallOption) (*EventsList, error) {
	out := new(EventsList)
	err := c.cc.Invoke(ctx, "/calendar.Calendar/GetEventsList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CalendarServer is the server API for Calendar service.
type CalendarServer interface {
	CreateEvent(context.Context, *CreateEventRequest) (*Event, error)
	UpdateEvent(context.Context, *Event) (*Event, error)
	RemoveEvent(context.Context, *RemoveEventRequest) (*RemoveEventResponse, error)
	GetEventsList(context.Context, *GetEventsListRequest) (*EventsList, error)
}

// UnimplementedCalendarServer can be embedded to have forward compatible implementations.
type UnimplementedCalendarServer struct {
}

func (*UnimplementedCalendarServer) CreateEvent(ctx context.Context, req *CreateEventRequest) (*Event, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEvent not implemented")
}
func (*UnimplementedCalendarServer) UpdateEvent(ctx context.Context, req *Event) (*Event, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEvent not implemented")
}
func (*UnimplementedCalendarServer) RemoveEvent(ctx context.Context, req *RemoveEventRequest) (*RemoveEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveEvent not implemented")
}
func (*UnimplementedCalendarServer) GetEventsList(ctx context.Context, req *GetEventsListRequest) (*EventsList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEventsList not implemented")
}

func RegisterCalendarServer(s *grpc.Server, srv CalendarServer) {
	s.RegisterService(&_Calendar_serviceDesc, srv)
}

func _Calendar_CreateEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServer).CreateEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calendar.Calendar/CreateEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServer).CreateEvent(ctx, req.(*CreateEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calendar_UpdateEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Event)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServer).UpdateEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calendar.Calendar/UpdateEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServer).UpdateEvent(ctx, req.(*Event))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calendar_RemoveEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServer).RemoveEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calendar.Calendar/RemoveEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServer).RemoveEvent(ctx, req.(*RemoveEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calendar_GetEventsList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEventsListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServer).GetEventsList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calendar.Calendar/GetEventsList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServer).GetEventsList(ctx, req.(*GetEventsListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Calendar_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calendar.Calendar",
	HandlerType: (*CalendarServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateEvent",
			Handler:    _Calendar_CreateEvent_Handler,
		},
		{
			MethodName: "UpdateEvent",
			Handler:    _Calendar_UpdateEvent_Handler,
		},
		{
			MethodName: "RemoveEvent",
			Handler:    _Calendar_RemoveEvent_Handler,
		},
		{
			MethodName: "GetEventsList",
			Handler:    _Calendar_GetEventsList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/protobuf/calendar.proto",
}
